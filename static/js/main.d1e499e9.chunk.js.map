{"version":3,"sources":["lib/index.js","lib/PieChart.js","index.js"],"names":["PieChart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","drawPieChart","ctx","colors","r","x","y","offsetX","offsetY","medianAngleRad","cosMedianAngle","sinMedianAngle","outerLabelAngleDeg","selected","arguments","length","undefined","isPickingCanvas","beginAngle","endAngle","cx","pieChartCanvasW","cy","pieChartCanvasH","label","fillColor","maxUsedOuterLabelAngleDeg","canvas","width","clearRect","i","aggData","type","rad","Math","cos","sin","dataTypeToColorDict","roundDegToMultiOfTen","toDegree","beginPath","fillStyle","moveTo","arc","lineTo","strokeStyle","fill","textAlign","textBaseline","font","percent","fillText","outerLabelCosMedianAngle","toRadians","outerLabelSinMedianAngle","outerLabelR","outerLabelX","outerLabelY","fontW","measureText","fontH","parseInt","match","rect","lineWidth","stroke","roundRadUp","newRad","parseFloat","toFixed","deg","Number","String","slice","angle","PI","findPos","obj","curleft","curtop","offsetParent","offsetLeft","offsetTop","rgbToHex","g","b","toString","toUpperCase","hexToRgb","hex","result","exec","digToRgbStr","num","pieChartPickingColorOffSet","randomRgba","o","round","random","handleMouseMove","e","pos","pieChartCanvas","pageX","pageY","p","pieChartPickingCtx","getImageData","data","currentColorIndex","pieChartCtx","pieChartColors","setState","toolTipLeft","clientX","toolTipTop","clientY","canvasToolTipVisibility","currentHovering","objectSpread","state","drawBreakDownBars","handleMouseOut","title","typeToColorDict","pieChartToolTipW","pieChartToolTipH","pieChartToolTipOffsetY","colorToDataTypeDict","pieChartPickingColors","push","refs","pieChartPickingCanvas","tooltipCanvas","getContext","aggTheData","rawData","_this2","aggDataTypeTable","dataSum","map","d","value","keys","key","index","sort","a","peach","peach1","orange","cyan","red","rSet","Set","oSet","ub","lb","has","fillRect","styles","pickingCanvas","display","tooltipContainer","height","left","top","visibility","zIndex","react_default","createElement","className","style","ref","onMouseMove","onMouseOut","PureComponent","App","handleSubmit","preventDefault","jsonStr","replace","s","substring","json","JSON","parse","concat","toConsumableArray","MEDS","FLUSHES","TPN","FEEDS","lol434ra","xbo4334x","meds","handleRemoveBtnCLick","bind","assertThisInitialized","self","setInterval","simulateDataChange","addOrRemove","floor","medIndex","Fragment","onSubmit","fontSize","placeholder","element","onClick","lib","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d1e499e9.chunk.js","sourcesContent":["import PieChart from \"./PieChart\";\nexport default PieChart;","import React, { PureComponent } from \"react\";\nimport \"./PieChart.css\"\n\nclass PieChart extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.data = this.props.data;\n        this.title = this.props.title;\n        this.typeToColorDict = this.props.dataTypeToColorDict\n        this.pieChartCtx = null;\n        this.pieChartPickingCtx = null;\n\n        this.pieChartCanvasW = 350\n        this.pieChartCanvasH = 400\n        this.pieChartToolTipW = 150\n        this.pieChartToolTipH = 190\n        this.pieChartToolTipOffsetY = 60\n\n        this.state = {\n            canvasToolTipVisibility: \"hidden\",\n            toolTipLeft: this.pieChartCanvasW - this.pieChartToolTipW,\n            toolTipTop: this.pieChartCanvasH - this.pieChartToolTipH + this.pieChartToolTipOffsetY\n        }\n\n        // pie chart data setup\n        this.colorToDataTypeDict = {}\n        this.pieChartColors = []\n        this.pieChartPickingColors = []\n        this.pieChartPickingColorOffSet = 7\n\n        for (var i = 1; i <= this.data.length; i++) {\n            this.pieChartPickingColors.push(this.digToRgbStr(i))\n        }\n    }\n\n    componentDidMount() {\n        this.pieChartCanvas = this.refs.canvas\n        this.pieChartPickingCanvas = this.refs.pieChartPickingCanvas\n        this.tooltipCanvas = this.refs.tooltipCanvas\n        this.pieChartCtx = this.pieChartCanvas.getContext(\"2d\")\n        this.pieChartPickingCtx = this.pieChartPickingCanvas.getContext(\"2d\")\n        this.aggData = this.aggTheData(this.data)\n        for (var i = 1; i <= this.aggData.length; i++) {\n            this.pieChartPickingColors.push(this.digToRgbStr(i))\n        }\n        this.drawPieChart(this.pieChartCtx, this.pieChartColors)\n        this.drawPieChart(this.pieChartPickingCtx, this.pieChartPickingColors, \" \", true)\n    }\n\n    componentDidUpdate() {\n        this.data = this.props.data;\n        this.title = this.props.title;\n        this.typeToColorDict = this.props.dataTypeToColorDict\n        this.aggData = this.aggTheData(this.data)\n        for (var i = 1; i <= this.aggData.length; i++) {\n            this.pieChartPickingColors.push(this.digToRgbStr(i))\n        }\n        this.drawPieChart(this.pieChartCtx, this.pieChartColors)\n        this.drawPieChart(this.pieChartPickingCtx, this.pieChartPickingColors, \" \", true)\n    }\n\n    aggTheData(rawData) {\n        let aggData = []\n        let aggDataTypeTable = {}\n        let dataSum = 0\n        this.pieChartColors = []\n\n        rawData.map(d => {\n            dataSum += d.value\n            if (!aggDataTypeTable[d.type]) {\n                aggDataTypeTable[d.type] = { \"value\": d.value }\n            } else {\n                aggDataTypeTable[d.type] = { \"value\": aggDataTypeTable[d.type][\"value\"] += d.value }\n            }\n        })\n\n        Object.keys(aggDataTypeTable).map((key, index) => {\n            let type = aggDataTypeTable[key]\n            this.pieChartColors.push(this.typeToColorDict[key])\n            type[\"percent\"] = type[\"value\"] / dataSum\n            type[\"rad\"] = type[\"percent\"] * 2 * Math.PI\n            type[\"type\"] = key\n            this.colorToDataTypeDict[this.pieChartColors[index]] = type\n            aggData[index] = type\n        })\n\n        aggData.sort((a, b) => {\n            return a.rad - b.rad\n        })\n\n        return aggData\n    }\n\n    // pass in data too\n    drawPieChart = (ctx, colors, selected = \"\", isPickingCanvas = false) => {\n        var offset = 10;\n        var beginAngle = 0;\n        var endAngle = 0;\n        var r, x, y, offsetX, offsetY, medianAngleRad, cosMedianAngle, sinMedianAngle\n        var cx = this.pieChartCanvasW / 2;\n        var cy = this.pieChartCanvasH / 2 + 30;\n        var label = \"ERROR\"\n        var fillColor = \"\"\n        var maxUsedOuterLabelAngleDeg = 0;\n        var outerLabelAngleDeg;\n\n        if (ctx) {\n            ctx.canvas.width = ctx.canvas.width\n            ctx.clearRect(0, 0, this.pieChartCanvasW, this.pieChartCanvasH);\n\n            for (var i = 0; i < this.aggData.length; i++) {\n                r = isPickingCanvas ? this.pieChartCanvasW / 4 + 10 : this.pieChartCanvasW / 4\n                label = this.aggData[i].type\n                beginAngle = endAngle\n                endAngle = endAngle + this.aggData[i].rad;\n                medianAngleRad = (endAngle + beginAngle) / 2;\n                cosMedianAngle = Math.cos(medianAngleRad)\n                sinMedianAngle = Math.sin(medianAngleRad)\n                x = cx + r * 0.60 * cosMedianAngle;\n                y = cy + r * 0.60 * sinMedianAngle;\n                fillColor = this.props.dataTypeToColorDict[this.aggData[i].type]\n\n                if (isPickingCanvas) {\n                    // picking canvas\n                    offsetX = 0;\n                    offsetY = 0;\n                } else if (fillColor === selected) {\n                    // for hovering effect\n                    offsetX = cosMedianAngle * offset;\n                    offsetY = sinMedianAngle * offset;\n                } else {\n                    offsetX = cosMedianAngle * 2\n                    offsetY = sinMedianAngle * 2\n                }\n\n                // for outer labeling\n                outerLabelAngleDeg = this.roundDegToMultiOfTen(this.toDegree(medianAngleRad))\n                if (outerLabelAngleDeg <= maxUsedOuterLabelAngleDeg + 5) {\n                    maxUsedOuterLabelAngleDeg += 6\n                    outerLabelAngleDeg = maxUsedOuterLabelAngleDeg\n                } else {\n                    maxUsedOuterLabelAngleDeg = outerLabelAngleDeg\n                }\n\n                // draw the slice\n                ctx.beginPath();\n                ctx.fillStyle = fillColor;\n                ctx.moveTo(cx + offsetX, cy + offsetY);\n                ctx.arc(cx + offsetX, cy + offsetY, r, beginAngle, endAngle);\n                ctx.lineTo(cx + offsetX, cy + offsetY);\n                ctx.strokeStyle = fillColor;  //'rgba(0, 0, 0, 0.4)'\n                ctx.fill();\n\n                //label styling\n                ctx.textAlign = \"center\";\n                ctx.textBaseline = \"top\";\n                // hovering effect\n                ctx.font = selected !== fillColor ? \"bold 10pt MuseoSans\" : \"900 10pt MuseoSans\"\n                ctx.fillStyle = isPickingCanvas ? fillColor : '#1f589d';\n\n                if (this.aggData[i].percent > 0.15) {\n                    if (!isPickingCanvas) {\n                        // draw the inner label\n                        ctx.fillText(label, x, y);\n                    }\n                } else {\n                    var outerLabelCosMedianAngle = Math.cos(this.toRadians(outerLabelAngleDeg))\n                    var outerLabelSinMedianAngle = Math.sin(this.toRadians(outerLabelAngleDeg))\n                    // modify the radius for the picking canvas so that label rect is drawn at the same position\n                    // as the visible canvas\n                    var outerLabelR = isPickingCanvas ? r -= 10 : r;\n                    var outerLabelX = cx + outerLabelR * 0.80 * outerLabelCosMedianAngle + outerLabelR / 2 * outerLabelCosMedianAngle;\n                    var outerLabelY = cy + outerLabelR * 0.90 * outerLabelSinMedianAngle + outerLabelR / 2 * outerLabelSinMedianAngle\n\n                    if (!isPickingCanvas) {\n                        if (this.aggData[i].percent > 0.15) {\n                            // draw the inner label\n                            ctx.fillText(label, x, y);\n                        }\n\n                        // draw the label line\n                        x = cx + r * 0.90 * cosMedianAngle;\n                        y = cy + r * 0.90 * sinMedianAngle;\n                        ctx.lineWidth = selected === fillColor[i] ? 2 : 1.3\n                        ctx.beginPath()\n                        ctx.moveTo(x, y);\n                        ctx.lineTo(x + r / 5 * cosMedianAngle, y + r / 5 * sinMedianAngle);\n\n                        // position label differently depending on the angle \n                        if (outerLabelAngleDeg >= 90 && outerLabelAngleDeg < 180) {\n                            // bottom left\n                            ctx.textAlign = \"right\"\n                            ctx.textBaseline = \"top\"\n                        } else if (outerLabelAngleDeg >= 180 && outerLabelAngleDeg < 270) {\n                            // top left\n                            ctx.textAlign = \"right\"\n                            ctx.textBaseline = \"bottom\"\n                        } else if (outerLabelAngleDeg >= 270) {\n                            // top right\n                            ctx.textAlign = \"left\"\n                            ctx.textBaseline = \"bottom\"\n                        } else {\n                            ctx.textAlign = \"left\"\n                            ctx.textBaseline = \"top\"\n                        }\n\n                        // draw angled line\n                        ctx.lineTo(outerLabelX, outerLabelY)\n                        ctx.stroke();\n                        // draw the outer label\n                        ctx.fillText(label, outerLabelX, outerLabelY);\n                    } else {\n                        // draw the label picking area \n                        // manually offsetting x and y to take the canvas text align into account\n                        var fontW = ctx.measureText(label).width\n                        var fontH = parseInt(ctx.font.match(/\\d+/), 11)\n                        var rectHeight = 12\n\n                        if (outerLabelAngleDeg >= 90 && outerLabelAngleDeg < 180) {\n                            // bottom left\n                            ctx.rect(outerLabelX - fontW, outerLabelY, fontW, rectHeight)\n                        } else if (outerLabelAngleDeg >= 180 && outerLabelAngleDeg < 270) {\n                            // top left\n                            ctx.rect(outerLabelX - fontW, outerLabelY - fontH - 2, fontW, rectHeight)\n                        } else if (outerLabelAngleDeg >= 270) {\n                            // top right\n                            ctx.rect(outerLabelX, outerLabelY - fontH - 2, fontW, rectHeight)\n                        } else {\n                            // bottom right\n                            ctx.rect(outerLabelX, outerLabelY, fontW, rectHeight)\n                        }\n\n                        ctx.fillStyle = fillColor[i]\n                        ctx.fill();\n                    }\n                }\n            }\n        }\n    }\n\n    roundRadUp = (rad) => {\n        if (rad < 0.1) {\n            return 0.1\n        } else if (rad >= 6.2) {\n            return 0\n        } else {\n            var newRad = rad += 0.1\n            return parseFloat(newRad.toFixed(1))\n        }\n    }\n\n    roundDegToMultiOfTen = (deg) => {\n        if (deg < 10) {\n            return 10\n        } else if (deg >= 350) {\n            return 360\n        } else {\n            return Number(String(deg).slice(0, -1) + 0)\n        }\n    }\n\n    toDegree = (angle) => {\n        return angle * (180 / Math.PI);\n    }\n\n    toRadians = (angle) => {\n        return angle * (Math.PI / 180);\n    }\n\n    findPos = (obj) => {\n        var curleft = 0,\n            curtop = 0;\n        if (obj.offsetParent) {\n            do {\n                curleft += obj.offsetLeft;\n                curtop += obj.offsetTop;\n            } while ((obj = obj.offsetParent));\n            return { x: curleft, y: curtop };\n        }\n        return undefined;\n    }\n\n    rgbToHex = (r, g, b) => {\n        if (r > 255 || g > 255 || b > 255) throw \"Invalid color component\";\n        return ((r << 16) | (g << 8) | b).toString(16).toUpperCase();\n    }\n\n    hexToRgb = (hex) => {\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        return result ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16)\n        } : null;\n    }\n\n    // takes in 0-255 and turn it into rgb\n    digToRgbStr = (num) => {\n        return \"rgb(0,0,\" + (num * this.pieChartPickingColorOffSet) + \")\"\n    }\n\n    randomRgba = () => {\n        var o = Math.round, r = Math.random, s = 255;\n        return 'rgba(' + o(r() * s) + ',' + o(r() * s) + ',' + o(r() * s) + ',' + r().toFixed(1) + ')';\n    }\n\n    drawBreakDownBars() {\n        let colors = {\n            peach: this.randomRgba(),\n            peach1: this.randomRgba(),\n            orange: this.randomRgba(),\n            cyan: this.randomRgba(),\n            red: this.randomRgba()\n        };\n        const rSet = new Set([0, 1]);\n        const oSet = new Set([2, 3, 4, 5, 6]);\n        let ub = 0;\n        let lb = 10;\n        const ctx = this.tooltipCanvas.getContext(\"2d\");\n\n        for (let i = 0; i < 10; i++) {\n            let fillStyle;\n            ctx.moveTo(0, ub);\n            ctx.moveTo(0, lb);\n            if (oSet.has(i)) {\n                fillStyle = colors.orange;\n            }\n            else if (rSet.has(i)) {\n                fillStyle = colors.red;\n            }\n            else {\n                fillStyle = colors.cyan;\n            }\n            ctx.fillStyle = fillStyle;\n            //x, y, w, h\n            ctx.fillRect(20, lb, 20, 10);\n            ctx.fillStyle = \"black\";\n            ctx.fillText(\"TEST\", 50, lb + 10);\n            // move the drawing pointer down\n            ub = lb;\n            lb += 10;\n        }\n    }\n\n    handleMouseMove = (e) => {\n        var pos = this.findPos(this.pieChartCanvas);\n        var x = e.pageX - pos.x;\n        var y = e.pageY - pos.y;\n        var p = this.pieChartPickingCtx.getImageData(x, y, 1, 1).data;\n        var currentColorIndex = p[2] / this.pieChartPickingColorOffSet - 1\n        var originalXOffset = 75\n        var originalYOffset = 15\n\n        // redraw the chart to \"offset\" the slice that is being hovered over\n        // this.pieChartCtx.clearRect(0, 0, this.pieChartCanvasW, this.pieChartCanvasH);\n        this.drawPieChart(this.pieChartCtx, this.pieChartColors, this.pieChartColors[currentColorIndex]);\n\n        if (p[2] !== 0 && p[3] === 255) {\n            this.setState({\n                toolTipLeft: e.clientX - originalXOffset,\n                toolTipTop: e.clientY + originalYOffset,\n                canvasToolTipVisibility: \"visible\",\n                currentHovering: this.aggData[currentColorIndex]\n            });\n        } else {\n            this.setState({\n                ...this.state,\n                canvasToolTipVisibility: \"hidden\",\n            });\n        }\n\n        if (this.state.currentHovering !== this.aggData[currentColorIndex]) {\n            // draw the bars\n            this.drawBreakDownBars();\n        }\n    }\n\n    handleMouseOut = () => {\n        this.setState({\n            ...this.state,\n            canvasToolTipVisibility: \"hidden\"\n        })\n    }\n\n    render() {\n        const styles = {\n            pickingCanvas: {\n                display: \"none\"\n            },\n            tooltipContainer: {\n                width: this.pieChartToolTipW,\n                height: this.pieChartToolTipH,\n                left: this.state.toolTipLeft,\n                top: this.state.toolTipTop,\n                visibility: this.state.canvasToolTipVisibility,\n                zIndex: 9999\n            }\n        }\n        return (\n            <div className=\"pie-chart-container\">\n                <div className=\"pie-chart-title\">\n                    <span>{this.title + \" \" + this.dataSum} </span>\n                    <span className=\"pie-chart-title-measurements\">mL/kg/day</span>\n                </div>\n                <canvas\n                    style={styles.pickingCanvas}\n                    className=\"pie-chart-picking-canvas\"\n                    ref=\"pieChartPickingCanvas\"\n                    width={this.pieChartCanvasW}\n                    height={this.pieChartCanvasH}\n                />\n                <canvas\n                    className=\"pie-chart-canvas\"\n                    ref=\"canvas\"\n                    width={this.pieChartCanvasW}\n                    height={this.pieChartCanvasH}\n                    onMouseMove={this.handleMouseMove}\n                    onMouseOut={this.handleMouseOut}\n                />\n                <div\n                    className=\"pie-chart-tooltip-container\"\n                    style={styles.tooltipContainer}>\n                    <span className=\"pie-chart-tooltip-title\">\n                        {this.state.currentHovering ? this.state.currentHovering[\"type\"] : \"\"}\n                    </span>\n                    <br />\n                    <span className=\"pie-chart-tooltip-percent\">\n                        {this.state.currentHovering ? Math.round(this.state.currentHovering[\"percent\"].toFixed(2) * 100) + \"% \" : \"\"}\n                    </span>\n                    <span className=\"pie-chart-tooltip-details\">\n                        of total\n                    </span>\n                    <canvas\n                        className=\"pie-chart-tooltip-canvas\"\n                        ref=\"tooltipCanvas\"\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PieChart\n","import React, { Component, Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport PieChart from \"./lib\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dataTypeToColorDict = {\n            MEDS: \"#C2EEF8\",\n            FLUSHES: \"#5DD2EF\",\n            TPN: \"#84A5D5\",\n            FEEDS: \"#A3DBDC\",\n            lol434ra: \"#C13BDA\",\n            xbo4334x: \"#613BFA\"\n        }\n\n        this.state = {\n            data: [\n                { value: 1, type: \"MEDS\" },\n                { value: 1, type: \"FLUSHES\" },\n                { value: 20, type: \"FEEDS\" },\n                { value: 10, type: \"FEEDS\" },\n                { value: 1, type: \"TPN\" }\n            ]\n        }\n\n        this.meds = [\"MEDS\", \"FLUSHES\", \"FEEDS\", \"TPN\"]\n\n        this.handleRemoveBtnCLick = this.handleRemoveBtnCLick.bind(this)\n    }\n\n    componentDidMount() {\n        let self = this\n        setInterval(function () {\n            self.simulateDataChange()\n        }, 1000);\n    }\n\n    handleRemoveBtnCLick() {\n        let data = this.state.data\n        data = data.slice(0, -1);\n        this.setState({\n            data: data\n        })\n    }\n\n    handleSubmit = (e) => {\n        if (e) e.preventDefault();\n        const data = this.data.value;\n        var jsonStr = data.replace(/(\\w+:)|(\\w+ :)/g, function (s) {\n            return '\"' + s.substring(0, s.length - 1) + '\":';\n        });\n\n        let json = JSON.parse(jsonStr)\n        let newData = this.state.data\n        newData.push(json)\n        this.setState({\n            data: [...this.state.data, json]\n        })\n    }\n\n    simulateDataChange() {\n        let addOrRemove = Math.floor(Math.random() * 100) + 0\n        let medIndex = Math.floor(Math.random() * 4) + 0\n\n        if (addOrRemove % 11 === 0) {\n            let data = this.state.data\n            data = data.slice(0, -1);\n            this.setState({\n                data: data\n            })\n        } else {\n            let json = {\n                value: Math.floor(Math.random() * 100) + 1,\n                type: this.meds[medIndex]\n            }\n            let newData = this.state.data\n            newData.push(json)\n            this.setState({\n                data: [...this.state.data, json]\n            })\n        }\n    }\n\n    render() {\n        let data = this.state.data\n        return (\n            <>\n                <div>Pass in data in the form: {' { value: 1, type: \"MEDS\" } '}</div>\n                <form onSubmit={this.handleSubmit}>\n                    <input style={{\n                        height: \"50px\",\n                        width: \"50%\",\n                        fontSize: \"14pt\"\n                    }} placeholder=\"data\" type=\"text\" ref={(element) => { this.data = element }} />\n                    <button>ADD DATA</button>\n                </form>\n                <button onClick={this.handleRemoveBtnCLick}>REMOVE DATA</button>\n                <PieChart data={data} dataTypeToColorDict={this.dataTypeToColorDict} title={\"Calories\"} />\n            </>\n        )\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}