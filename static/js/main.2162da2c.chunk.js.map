{"version":3,"sources":["lib/index.js","lib/PieChart.js","index.js"],"names":["PieChart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","drawPieChart","ctx","colors","r","x","y","offsetX","offsetY","medianAngleRad","cosMedianAngle","sinMedianAngle","outerLabelAngleDeg","selected","arguments","length","undefined","isPickingCanvas","beginAngle","endAngle","cx","pieChartCanvasW","cy","pieChartCanvasH","label","fillColor","maxUsedOuterLabelAngleDeg","canvas","width","clearRect","i","aggData","type","rad","Math","cos","sin","roundDegToMultiOfTen","toDegree","beginPath","fillStyle","moveTo","arc","lineTo","strokeStyle","fill","textAlign","textBaseline","font","percent","fillText","outerLabelCosMedianAngle","toRadians","outerLabelSinMedianAngle","outerLabelR","outerLabelX","outerLabelY","fontW","measureText","fontH","parseInt","match","rect","lineWidth","stroke","roundRadUp","newRad","parseFloat","toFixed","deg","Number","String","slice","angle","PI","findPos","obj","curleft","curtop","offsetParent","offsetLeft","offsetTop","rgbToHex","g","b","toString","toUpperCase","hexToRgb","hex","result","exec","digToRgbStr","num","pieChartPickingColorOffSet","randomRgba","o","round","random","handleMouseMove","e","pos","pieChartCanvas","pageX","pageY","p","pieChartPickingCtx","getImageData","data","currentColorIndex","pieChartColors","map","d","push","dataTypeToColorDict","pieChartCtx","console","log","pieChartPickingColors","setState","toolTipLeft","clientX","toolTipTop","clientY","canvasToolTipVisibility","currentHovering","objectSpread","state","drawBreakDownBars","handleMouseOut","title","typeToColorDict","pieChartToolTipW","pieChartToolTipH","pieChartToolTipOffsetY","colorToDataTypeDict","_this2","refs","pieChartPickingCanvas","tooltipCanvas","getContext","aggTheData","_this3","rawData","_this4","aggDataTypeTable","dataSum","value","keys","key","index","sort","a","peach","peach1","orange","cyan","red","rSet","Set","oSet","ub","lb","has","fillRect","styles","pickingCanvas","display","tooltipContainer","height","left","top","visibility","zIndex","react_default","createElement","className","style","ref","onMouseMove","onMouseOut","PureComponent","App","handleSubmit","preventDefault","jsonStr","replace","s","substring","json","JSON","parse","concat","toConsumableArray","MEDS","FLUSHES","TPN","FEEDS","lol434ra","xbo4334x","meds","handleRemoveBtnCLick","bind","assertThisInitialized","self","setInterval","simulateDataChange","addOrRemove","floor","medIndex","Fragment","onSubmit","fontSize","placeholder","element","onClick","lib","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2162da2c.chunk.js","sourcesContent":["import PieChart from \"./PieChart\";\nexport default PieChart;","import React, { PureComponent } from \"react\";\nimport \"./PieChart.css\"\n\nclass PieChart extends PureComponent {\n    constructor(props) {\n        super(props)\n        this.data = this.props.data\n        this.title = this.props.title\n        this.typeToColorDict = this.props.dataTypeToColorDict\n        this.pieChartCtx = null\n        this.pieChartPickingCtx = null\n\n        this.pieChartCanvasW = 350\n        this.pieChartCanvasH = 400\n        this.pieChartToolTipW = 150\n        this.pieChartToolTipH = 190\n        this.pieChartToolTipOffsetY = 60\n\n        this.state = {\n            canvasToolTipVisibility: \"hidden\",\n            toolTipLeft: this.pieChartCanvasW - this.pieChartToolTipW,\n            toolTipTop: this.pieChartCanvasH - this.pieChartToolTipH + this.pieChartToolTipOffsetY\n        }\n\n        // pie chart data setup\n        this.colorToDataTypeDict = {}\n        this.pieChartColors = []\n        this.pieChartPickingColors = []\n        this.pieChartPickingColorOffSet = 7\n\n        for (var i = 1; i <= this.data.length; i++) {\n            this.pieChartPickingColors.push(this.digToRgbStr(i))\n        }\n    }\n\n    componentDidMount() {\n        this.pieChartCanvas = this.refs.canvas\n        this.pieChartPickingCanvas = this.refs.pieChartPickingCanvas\n        this.tooltipCanvas = this.refs.tooltipCanvas\n        this.pieChartCtx = this.pieChartCanvas.getContext(\"2d\")\n        this.pieChartPickingCtx = this.pieChartPickingCanvas.getContext(\"2d\")\n        this.aggData = this.aggTheData(this.data)\n        this.pieChartPickingColors = []\n        for (var i = 1; i <= this.aggData.length; i++) {\n            this.pieChartPickingColors.push(this.digToRgbStr(i))\n        }\n        let pieChartColors = []\n        this.aggData.map(d => {\n            pieChartColors.push(this.props.dataTypeToColorDict[d[\"type\"]])\n        })\n        this.drawPieChart(this.pieChartCtx, pieChartColors)\n        this.drawPieChart(this.pieChartPickingCtx, this.pieChartPickingColors, \" \", true)\n    }\n\n    componentDidUpdate() {\n        this.data = this.props.data\n        this.title = this.props.title\n        this.typeToColorDict = this.props.dataTypeToColorDict\n        this.aggData = this.aggTheData(this.data)\n        this.pieChartPickingColors = []\n        for (var i = 1; i <= this.aggData.length; i++) {\n            this.pieChartPickingColors.push(this.digToRgbStr(i))\n        }\n        let pieChartColors = []\n        this.aggData.map(d => {\n            pieChartColors.push(this.props.dataTypeToColorDict[d[\"type\"]])\n        })\n        if (this.state.canvasToolTipVisibility === \"hidden\") {\n            this.drawPieChart(this.pieChartCtx, pieChartColors)\n            this.drawPieChart(this.pieChartPickingCtx, this.pieChartPickingColors, \" \", true)\n        }\n    }\n\n    aggTheData(rawData) {\n        let aggData = []\n        let aggDataTypeTable = {}\n        let dataSum = 0\n        this.pieChartColors = []\n\n        rawData.map(d => {\n            dataSum += d.value\n            if (!aggDataTypeTable[d.type]) {\n                aggDataTypeTable[d.type] = { \"value\": d.value }\n            } else {\n                aggDataTypeTable[d.type] = { \"value\": aggDataTypeTable[d.type][\"value\"] += d.value }\n            }\n        })\n\n        Object.keys(aggDataTypeTable).map((key, index) => {\n            let type = aggDataTypeTable[key]\n            this.pieChartColors.push(this.typeToColorDict[key])\n            type[\"percent\"] = type[\"value\"] / dataSum\n            type[\"rad\"] = type[\"percent\"] * 2 * Math.PI\n            type[\"type\"] = key\n            this.colorToDataTypeDict[this.pieChartColors[index]] = type\n            aggData[index] = type\n        })\n\n        aggData.sort((a, b) => {\n            return a.rad - b.rad\n        })\n\n        return aggData\n    }\n\n    // pass in data too\n    drawPieChart = (ctx, colors, selected = \"\", isPickingCanvas = false) => {\n        var offset = 10\n        var beginAngle = 0\n        var endAngle = 0\n        var r, x, y, offsetX, offsetY, medianAngleRad, cosMedianAngle, sinMedianAngle\n        var cx = this.pieChartCanvasW / 2\n        var cy = this.pieChartCanvasH / 2 + 30\n        var label = \"ERROR\"\n        var fillColor = \"\"\n        var maxUsedOuterLabelAngleDeg = 0\n        var outerLabelAngleDeg\n\n        if (ctx) {\n            ctx.canvas.width = ctx.canvas.width\n            ctx.clearRect(0, 0, this.pieChartCanvasW, this.pieChartCanvasH)\n\n            for (var i = 0; i < this.aggData.length; i++) {\n                r = isPickingCanvas ? this.pieChartCanvasW / 4 + 10 : this.pieChartCanvasW / 4\n                label = this.aggData[i].type\n                beginAngle = endAngle\n                endAngle = endAngle + this.aggData[i].rad\n                medianAngleRad = (endAngle + beginAngle) / 2\n                cosMedianAngle = Math.cos(medianAngleRad)\n                sinMedianAngle = Math.sin(medianAngleRad)\n                x = cx + r * 0.60 * cosMedianAngle\n                y = cy + r * 0.60 * sinMedianAngle\n                fillColor = colors[i]\n\n                if (isPickingCanvas) {\n                    // picking canvas\n                    offsetX = 0\n                    offsetY = 0\n                } else if (fillColor === selected) {\n                    // for hovering effect\n                    offsetX = cosMedianAngle * offset\n                    offsetY = sinMedianAngle * offset\n                } else {\n                    offsetX = cosMedianAngle * 2\n                    offsetY = sinMedianAngle * 2\n                }\n\n                // for outer labeling\n                outerLabelAngleDeg = this.roundDegToMultiOfTen(this.toDegree(medianAngleRad))\n                if (outerLabelAngleDeg <= maxUsedOuterLabelAngleDeg + 5) {\n                    maxUsedOuterLabelAngleDeg += 6\n                    outerLabelAngleDeg = maxUsedOuterLabelAngleDeg\n                } else {\n                    maxUsedOuterLabelAngleDeg = outerLabelAngleDeg\n                }\n\n                // draw the slice\n                ctx.beginPath()\n                ctx.fillStyle = fillColor\n                ctx.moveTo(cx + offsetX, cy + offsetY)\n                ctx.arc(cx + offsetX, cy + offsetY, r, beginAngle, endAngle)\n                ctx.lineTo(cx + offsetX, cy + offsetY)\n                ctx.strokeStyle = fillColor  //'rgba(0, 0, 0, 0.4)'\n                ctx.fill()\n\n                //label styling\n                ctx.textAlign = \"center\"\n                ctx.textBaseline = \"top\"\n                // hovering effect\n                ctx.font = selected !== fillColor ? \"bold 10pt MuseoSans\" : \"900 10pt MuseoSans\"\n                ctx.fillStyle = isPickingCanvas ? fillColor : '#1f589d'\n\n                if (this.aggData[i].percent > 0.15) {\n                    if (!isPickingCanvas) {\n                        // draw the inner label\n                        ctx.fillText(label, x, y)\n                    }\n                } else {\n                    var outerLabelCosMedianAngle = Math.cos(this.toRadians(outerLabelAngleDeg))\n                    var outerLabelSinMedianAngle = Math.sin(this.toRadians(outerLabelAngleDeg))\n                    // modify the radius for the picking canvas so that label rect is drawn at the same position\n                    // as the visible canvas\n                    var outerLabelR = isPickingCanvas ? r -= 10 : r\n                    var outerLabelX = cx + outerLabelR * 0.80 * outerLabelCosMedianAngle + outerLabelR / 2 * outerLabelCosMedianAngle\n                    var outerLabelY = cy + outerLabelR * 0.90 * outerLabelSinMedianAngle + outerLabelR / 2 * outerLabelSinMedianAngle\n\n                    if (!isPickingCanvas) {\n                        if (this.aggData[i].percent > 0.15) {\n                            // draw the inner label\n                            ctx.fillText(label, x, y)\n                        }\n\n                        // draw the label line\n                        x = cx + r * 0.90 * cosMedianAngle\n                        y = cy + r * 0.90 * sinMedianAngle\n                        ctx.lineWidth = selected === fillColor[i] ? 2 : 1.3\n                        ctx.beginPath()\n                        ctx.moveTo(x, y)\n                        ctx.lineTo(x + r / 5 * cosMedianAngle, y + r / 5 * sinMedianAngle)\n\n                        // position label differently depending on the angle \n                        if (outerLabelAngleDeg >= 90 && outerLabelAngleDeg < 180) {\n                            // bottom left\n                            ctx.textAlign = \"right\"\n                            ctx.textBaseline = \"top\"\n                        } else if (outerLabelAngleDeg >= 180 && outerLabelAngleDeg < 270) {\n                            // top left\n                            ctx.textAlign = \"right\"\n                            ctx.textBaseline = \"bottom\"\n                        } else if (outerLabelAngleDeg >= 270) {\n                            // top right\n                            ctx.textAlign = \"left\"\n                            ctx.textBaseline = \"bottom\"\n                        } else {\n                            ctx.textAlign = \"left\"\n                            ctx.textBaseline = \"top\"\n                        }\n\n                        // draw angled line\n                        ctx.lineTo(outerLabelX, outerLabelY)\n                        ctx.stroke()\n                        // draw the outer label\n                        ctx.fillText(label, outerLabelX, outerLabelY);\n                    } else {\n                        // draw the label picking area \n                        // manually offsetting x and y to take the canvas text align into account\n                        var fontW = ctx.measureText(label).width\n                        var fontH = parseInt(ctx.font.match(/\\d+/), 11)\n                        var rectHeight = 12\n\n                        if (outerLabelAngleDeg >= 90 && outerLabelAngleDeg < 180) {\n                            // bottom left\n                            ctx.rect(outerLabelX - fontW, outerLabelY, fontW, rectHeight)\n                        } else if (outerLabelAngleDeg >= 180 && outerLabelAngleDeg < 270) {\n                            // top left\n                            ctx.rect(outerLabelX - fontW, outerLabelY - fontH - 2, fontW, rectHeight)\n                        } else if (outerLabelAngleDeg >= 270) {\n                            // top right\n                            ctx.rect(outerLabelX, outerLabelY - fontH - 2, fontW, rectHeight)\n                        } else {\n                            // bottom right\n                            ctx.rect(outerLabelX, outerLabelY, fontW, rectHeight)\n                        }\n\n                        ctx.fillStyle = fillColor[i]\n                        ctx.fill()\n                    }\n                }\n            }\n        }\n    }\n\n    roundRadUp = (rad) => {\n        if (rad < 0.1) {\n            return 0.1\n        } else if (rad >= 6.2) {\n            return 0\n        } else {\n            var newRad = rad += 0.1\n            return parseFloat(newRad.toFixed(1))\n        }\n    }\n\n    roundDegToMultiOfTen = (deg) => {\n        if (deg < 10) {\n            return 10\n        } else if (deg >= 350) {\n            return 360\n        } else {\n            return Number(String(deg).slice(0, -1) + 0)\n        }\n    }\n\n    toDegree = (angle) => {\n        return angle * (180 / Math.PI);\n    }\n\n    toRadians = (angle) => {\n        return angle * (Math.PI / 180);\n    }\n\n    findPos = (obj) => {\n        var curleft = 0,\n            curtop = 0;\n        if (obj.offsetParent) {\n            do {\n                curleft += obj.offsetLeft;\n                curtop += obj.offsetTop;\n            } while ((obj = obj.offsetParent));\n            return { x: curleft, y: curtop };\n        }\n        return undefined;\n    }\n\n    rgbToHex = (r, g, b) => {\n        if (r > 255 || g > 255 || b > 255) throw \"Invalid color component\";\n        return ((r << 16) | (g << 8) | b).toString(16).toUpperCase();\n    }\n\n    hexToRgb = (hex) => {\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        return result ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16)\n        } : null;\n    }\n\n    // takes in 0-255 and turn it into rgb\n    digToRgbStr = (num) => {\n        return \"rgb(0,0,\" + (num * this.pieChartPickingColorOffSet) + \")\"\n    }\n\n    randomRgba = () => {\n        var o = Math.round, r = Math.random, s = 255;\n        return 'rgba(' + o(r() * s) + ',' + o(r() * s) + ',' + o(r() * s) + ',' + r().toFixed(1) + ')';\n    }\n\n    drawBreakDownBars() {\n        let colors = {\n            peach: this.randomRgba(),\n            peach1: this.randomRgba(),\n            orange: this.randomRgba(),\n            cyan: this.randomRgba(),\n            red: this.randomRgba()\n        };\n        const rSet = new Set([0, 1]);\n        const oSet = new Set([2, 3, 4, 5, 6]);\n        let ub = 0;\n        let lb = 10;\n        const ctx = this.tooltipCanvas.getContext(\"2d\");\n\n        for (let i = 0; i < 10; i++) {\n            let fillStyle;\n            ctx.moveTo(0, ub);\n            ctx.moveTo(0, lb);\n            if (oSet.has(i)) {\n                fillStyle = colors.orange;\n            }\n            else if (rSet.has(i)) {\n                fillStyle = colors.red;\n            }\n            else {\n                fillStyle = colors.cyan;\n            }\n            ctx.fillStyle = fillStyle;\n            //x, y, w, h\n            ctx.fillRect(20, lb, 20, 10);\n            ctx.fillStyle = \"black\";\n            ctx.fillText(\"TEST\", 50, lb + 10);\n            // move the drawing pointer down\n            ub = lb;\n            lb += 10;\n        }\n    }\n\n    handleMouseMove = (e) => {\n        var pos = this.findPos(this.pieChartCanvas);\n        var x = e.pageX - pos.x;\n        var y = e.pageY - pos.y;\n        var p = this.pieChartPickingCtx.getImageData(x, y, 1, 1).data;\n        var currentColorIndex = p[2] / this.pieChartPickingColorOffSet - 1\n        var originalXOffset = 75\n        var originalYOffset = 15\n\n        // redraw the chart to \"offset\" the slice that is being hovered over\n        // this.pieChartCtx.clearRect(0, 0, this.pieChartCanvasW, this.pieChartCanvasH);\n        let pieChartColors = []\n        this.aggData.map(d => {\n            pieChartColors.push(this.props.dataTypeToColorDict[d[\"type\"]])\n        })\n        this.drawPieChart(this.pieChartCtx, pieChartColors, pieChartColors[currentColorIndex]);\n\n        console.log(p, currentColorIndex, this.pieChartPickingColors)\n\n        if (p[2] !== 0 && p[3] === 255) {\n            this.setState({\n                toolTipLeft: e.clientX - originalXOffset,\n                toolTipTop: e.clientY + originalYOffset,\n                canvasToolTipVisibility: \"visible\",\n                currentHovering: this.aggData[currentColorIndex]\n            })\n        } else {\n            this.setState({\n                ...this.state,\n                canvasToolTipVisibility: \"hidden\",\n            })\n        }\n\n        if (this.state.currentHovering !== this.aggData[currentColorIndex]) {\n            // draw the bars\n            this.drawBreakDownBars();\n        }\n    }\n\n    handleMouseOut = () => {\n        this.setState({\n            ...this.state,\n            canvasToolTipVisibility: \"hidden\"\n        })\n    }\n\n    render() {\n        const styles = {\n            pickingCanvas: {\n                display: \"none\"\n            },\n            tooltipContainer: {\n                width: this.pieChartToolTipW,\n                height: this.pieChartToolTipH,\n                left: this.state.toolTipLeft,\n                top: this.state.toolTipTop,\n                visibility: this.state.canvasToolTipVisibility,\n                zIndex: 9999\n            }\n        }\n        return (\n            <div className=\"pie-chart-container\">\n                <div className=\"pie-chart-title\">\n                    <span>{this.title + \" \" + this.dataSum} </span>\n                    <span className=\"pie-chart-title-measurements\">mL/kg/day</span>\n                </div>\n                <canvas\n                    style={styles.pickingCanvas}\n                    className=\"pie-chart-picking-canvas\"\n                    ref=\"pieChartPickingCanvas\"\n                    width={this.pieChartCanvasW}\n                    height={this.pieChartCanvasH}\n                />\n                <canvas\n                    className=\"pie-chart-canvas\"\n                    ref=\"canvas\"\n                    width={this.pieChartCanvasW}\n                    height={this.pieChartCanvasH}\n                    onMouseMove={this.handleMouseMove}\n                    onMouseOut={this.handleMouseOut}\n                />\n                <div\n                    className=\"pie-chart-tooltip-container\"\n                    style={styles.tooltipContainer}>\n                    <span className=\"pie-chart-tooltip-title\">\n                        {this.state.currentHovering ? this.state.currentHovering[\"type\"] : \"\"}\n                    </span>\n                    <br />\n                    <span className=\"pie-chart-tooltip-percent\">\n                        {this.state.currentHovering ? Math.round(this.state.currentHovering[\"percent\"].toFixed(2) * 100) + \"% \" : \"\"}\n                    </span>\n                    <span className=\"pie-chart-tooltip-details\">\n                        of total\n                    </span>\n                    <canvas\n                        className=\"pie-chart-tooltip-canvas\"\n                        ref=\"tooltipCanvas\"\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PieChart\n","import React, { Component, Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport PieChart from \"./lib\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dataTypeToColorDict = {\n            MEDS: \"#C2EEF8\",\n            FLUSHES: \"#5DD2EF\",\n            TPN: \"#84A5D5\",\n            FEEDS: \"#A3DBDC\",\n            lol434ra: \"#C13BDA\",\n            xbo4334x: \"#613BFA\"\n        }\n\n        this.state = {\n            data: [\n                { value: 1, type: \"MEDS\" },\n                { value: 1, type: \"FLUSHES\" },\n                { value: 20, type: \"FEEDS\" },\n                { value: 10, type: \"FEEDS\" },\n                { value: 1, type: \"TPN\" }\n            ]\n        }\n\n        this.meds = [\"MEDS\", \"FLUSHES\", \"FEEDS\", \"TPN\"]\n\n        this.handleRemoveBtnCLick = this.handleRemoveBtnCLick.bind(this)\n    }\n\n    componentDidMount() {\n        let self = this\n        setInterval(function () {\n            self.simulateDataChange()\n        }, 1000);\n    }\n\n    handleRemoveBtnCLick() {\n        let data = this.state.data\n        data = data.slice(0, -1);\n        this.setState({\n            data: data\n        })\n    }\n\n    handleSubmit = (e) => {\n        if (e) e.preventDefault();\n        const data = this.data.value;\n        var jsonStr = data.replace(/(\\w+:)|(\\w+ :)/g, function (s) {\n            return '\"' + s.substring(0, s.length - 1) + '\":';\n        });\n\n        let json = JSON.parse(jsonStr)\n        let newData = this.state.data\n        newData.push(json)\n        this.setState({\n            data: [...this.state.data, json]\n        })\n    }\n\n    simulateDataChange() {\n        let addOrRemove = Math.floor(Math.random() * 100) + 0\n        let medIndex = Math.floor(Math.random() * 4) + 0\n\n        if (addOrRemove % 11 === 0) {\n            let data = this.state.data\n            data = data.slice(0, -1);\n            this.setState({\n                data: data\n            })\n        } else {\n            let json = {\n                value: Math.floor(Math.random() * 100) + 1,\n                type: this.meds[medIndex]\n            }\n            let newData = this.state.data\n            newData.push(json)\n            this.setState({\n                data: [...this.state.data, json]\n            })\n        }\n    }\n\n    render() {\n        let data = this.state.data\n        return (\n            <>\n                <div>Pass in data in the form: {' { value: 1, type: \"MEDS\" } '}</div>\n                <form onSubmit={this.handleSubmit}>\n                    <input style={{\n                        height: \"50px\",\n                        width: \"50%\",\n                        fontSize: \"14pt\"\n                    }} placeholder=\"data\" type=\"text\" ref={(element) => { this.data = element }} />\n                    <button>ADD DATA</button>\n                </form>\n                <button onClick={this.handleRemoveBtnCLick}>REMOVE DATA</button>\n                <PieChart data={data} dataTypeToColorDict={this.dataTypeToColorDict} title={\"Calories\"} />\n            </>\n        )\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}