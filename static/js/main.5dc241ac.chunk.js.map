{"version":3,"sources":["lib/PieChart.js","lib/index.js","lib/PieChartBundle.jsx","index.js"],"names":["PieChart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","drawPieChart","ctx","colors","r","x","y","offsetX","offsetY","medianAngleRad","cosMedianAngle","sinMedianAngle","outerLabelAngleDeg","selected","arguments","length","undefined","isPickingCanvas","beginAngle","endAngle","cx","pieChartCanvasW","cy","pieChartCanvasH","label","fillColor","maxUsedOuterLabelAngleDeg","i","aggData","type","rad","Math","cos","sin","roundDegToMultiOfTen","toDegree","beginPath","fillStyle","moveTo","arc","lineTo","strokeStyle","fill","textAlign","textBaseline","font","percent","fillText","outerLabelCosMedianAngle","toRadians","outerLabelSinMedianAngle","outerLabelR","outerLabelX","outerLabelY","fontW","measureText","width","fontH","parseInt","match","rect","lineWidth","stroke","roundRadUp","newRad","parseFloat","toFixed","deg","Number","String","slice","angle","PI","findPos","obj","curleft","curtop","offsetParent","offsetLeft","offsetTop","rgbToHex","g","b","toString","toUpperCase","hexToRgb","hex","result","exec","digToRgbStr","num","pieChartPickingColorOffSet","randomRgba","o","round","random","handleMouseMove","e","pos","pieChartCanvas","pageX","pageY","p","pieChartPickingCtx","getImageData","data","currentColorIndex","pieChartCtx","clearRect","height","pieChartColors","setState","toolTipLeft","clientX","toolTipTop","clientY","canvasToolTipVisibility","currentHovering","objectSpread","state","drawBreakDownBars","handleMouseOut","title","typeToColorDict","dataTypeToColorDict","pieChartToolTipW","pieChartToolTipH","pieChartToolTipOffsetY","aggDataTypeTable","colorToDataTypeDict","pieChartPickingColors","pieChartPickingColorsSet","Set","push","add","dataSum","map","d","value","keys","key","index","sort","a","peach","peach1","orange","cyan","red","rSet","oSet","ub","lb","tooltipCanvas","getContext","has","fillRect","refs","canvas","pieChartPickingCanvas","styles","pickingCanvas","display","tooltipContainer","left","top","visibility","zIndex","react_default","createElement","className","style","ref","onMouseMove","onMouseOut","PureComponent","PieChartBundle","MEDS","FLUSHES","TPN","FEEDS","lol434ra","xbo4334x","src_lib_PieChart","App","handleSubmit","preventDefault","jsonStr","replace","s","substring","json","JSON","parse","time","m1","m2","selectedCol1","selectedCol2","updateTableState","bind","assertThisInitialized","newState","_this2","Fragment","onSubmit","fontSize","placeholder","element","lib","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5dc241ac.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\nimport \"./PieChart.css\"\n\nclass PieChart extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.data = this.props.data;\n        this.title = this.props.title;\n        this.typeToColorDict = this.props.dataTypeToColorDict\n        this.pieChartCtx = null;\n        this.pieChartPickingCtx = null;\n\n        this.pieChartCanvasW = 350\n        this.pieChartCanvasH = 400\n        this.pieChartToolTipW = 150\n        this.pieChartToolTipH = 190\n        this.pieChartToolTipOffsetY = 60\n\n        this.state = {\n            canvasToolTipVisibility: \"hidden\",\n            toolTipLeft: this.pieChartCanvasW - this.pieChartToolTipW,\n            toolTipTop: this.pieChartCanvasH - this.pieChartToolTipH + this.pieChartToolTipOffsetY\n        }\n\n        // pie chart data setup\n        this.aggData = []\n        this.aggDataTypeTable = {}\n        this.colorToDataTypeDict = {}\n        this.pieChartColors = []\n        this.pieChartPickingColors = []\n        this.pieChartPickingColorsSet = new Set()\n        this.pieChartPickingColorOffSet = 7\n        for (var i = 1; i <= this.data.length; i++) {\n            this.pieChartPickingColors.push(this.digToRgbStr(i))\n            this.pieChartPickingColorsSet.add(i * this.pieChartPickingColorOffSet)\n        }\n        this.dataSum = 0\n        this.data.map(d => {\n            this.dataSum += d.value\n            if (!this.aggDataTypeTable[d.type]) {\n                this.aggDataTypeTable[d.type] = { \"value\": d.value }\n            } else {\n                this.aggDataTypeTable[d.type] = { \"value\": this.aggDataTypeTable[d.type][\"value\"] += d.value }\n            }\n        })\n\n        Object.keys(this.aggDataTypeTable).map((key, index) => {\n            let type = this.aggDataTypeTable[key]\n            this.pieChartColors.push(this.typeToColorDict[key])\n            type[\"percent\"] = type[\"value\"] / this.dataSum\n            type[\"rad\"] = type[\"percent\"] * 2 * Math.PI\n            type[\"type\"] = key\n            this.colorToDataTypeDict[this.pieChartColors[i]] = type\n            this.aggData[index] = type\n        })\n\n        this.aggData.sort((a, b) => {\n            return a.rad - b.rad\n        })\n    }\n\n    // animate = (time) => {\n    //     draw(pct);\n    //     pct += 3;\n    //     if (pct <= endingPct) {\n    //         requestAnimationFrame(animate);\n    //     }\n    // }\n\n    drawPieChart = (ctx, colors, selected = \"\", isPickingCanvas = false) => {\n        var offset = 10;\n        var beginAngle = 0;\n        var endAngle = 0;\n        var r, x, y, offsetX, offsetY, medianAngleRad, cosMedianAngle, sinMedianAngle\n        var cx = this.pieChartCanvasW / 2;\n        var cy = this.pieChartCanvasH / 2 + 30;\n        var label = \"ERROR\"\n        var fillColor = \"\"\n        var maxUsedOuterLabelAngleDeg = 0;\n        var outerLabelAngleDeg;\n\n        for (var i = 0; i < this.aggData.length; i++) {\n            r = isPickingCanvas ? this.pieChartCanvasW / 4 + 10 : this.pieChartCanvasW / 4\n            label = this.aggData[i].type\n            beginAngle = endAngle\n            endAngle = endAngle + this.aggData[i].rad;\n            medianAngleRad = (endAngle + beginAngle) / 2;\n            cosMedianAngle = Math.cos(medianAngleRad)\n            sinMedianAngle = Math.sin(medianAngleRad)\n            x = cx + r * 0.60 * cosMedianAngle;\n            y = cy + r * 0.60 * sinMedianAngle;\n            fillColor = colors[i]\n\n            if (isPickingCanvas) {\n                // picking canvas\n                offsetX = 0;\n                offsetY = 0;\n            } else if (colors[i] === selected) {\n                // for hovering effect\n                offsetX = cosMedianAngle * offset;\n                offsetY = sinMedianAngle * offset;\n            } else {\n                offsetX = cosMedianAngle * 2\n                offsetY = sinMedianAngle * 2\n            }\n\n            // for outer labeling\n            outerLabelAngleDeg = this.roundDegToMultiOfTen(this.toDegree(medianAngleRad))\n            if (outerLabelAngleDeg <= maxUsedOuterLabelAngleDeg + 5) {\n                maxUsedOuterLabelAngleDeg += 6\n                outerLabelAngleDeg = maxUsedOuterLabelAngleDeg\n            } else {\n                maxUsedOuterLabelAngleDeg = outerLabelAngleDeg\n            }\n\n            // draw the slice\n            ctx.beginPath();\n            ctx.fillStyle = fillColor;\n            ctx.moveTo(cx + offsetX, cy + offsetY);\n            ctx.arc(cx + offsetX, cy + offsetY, r, beginAngle, endAngle);\n            ctx.lineTo(cx + offsetX, cy + offsetY);\n            ctx.strokeStyle = colors[i];  //'rgba(0, 0, 0, 0.4)'\n            ctx.fill();\n\n            //label styling\n            ctx.textAlign = \"center\";\n            ctx.textBaseline = \"top\";\n            // hovering effect\n            ctx.font = selected !== colors[i] ? \"bold 10pt MuseoSans\" : \"900 10pt MuseoSans\"\n            ctx.fillStyle = isPickingCanvas ? colors[i] : '#1f589d';\n\n            if (this.aggData[i].percent > 0.15) {\n                if (!isPickingCanvas) {\n                    // draw the inner label\n                    ctx.fillText(label, x, y);\n                }\n            } else {\n                var outerLabelCosMedianAngle = Math.cos(this.toRadians(outerLabelAngleDeg))\n                var outerLabelSinMedianAngle = Math.sin(this.toRadians(outerLabelAngleDeg))\n                // modify the radius for the picking canvas so that label rect is drawn at the same position\n                // as the visible canvas\n                var outerLabelR = isPickingCanvas ? r -= 10 : r;\n                var outerLabelX = cx + outerLabelR * 0.80 * outerLabelCosMedianAngle + outerLabelR / 2 * outerLabelCosMedianAngle;\n                var outerLabelY = cy + outerLabelR * 0.90 * outerLabelSinMedianAngle + outerLabelR / 2 * outerLabelSinMedianAngle\n\n                if (!isPickingCanvas) {\n                    if (this.aggData[i].percent > 0.15) {\n                        // draw the inner label\n                        ctx.fillText(label, x, y);\n                    }\n\n                    // draw the label line\n                    x = cx + r * 0.90 * cosMedianAngle;\n                    y = cy + r * 0.90 * sinMedianAngle;\n                    ctx.lineWidth = selected === colors[i] ? 2 : 1.3\n                    ctx.beginPath()\n                    ctx.moveTo(x, y);\n                    ctx.lineTo(x + r / 5 * cosMedianAngle, y + r / 5 * sinMedianAngle);\n\n                    // position label differently depending on the angle \n                    if (outerLabelAngleDeg >= 90 && outerLabelAngleDeg < 180) {\n                        // bottom left\n                        ctx.textAlign = \"right\"\n                        ctx.textBaseline = \"top\"\n                    } else if (outerLabelAngleDeg >= 180 && outerLabelAngleDeg < 270) {\n                        // top left\n                        ctx.textAlign = \"right\"\n                        ctx.textBaseline = \"bottom\"\n                    } else if (outerLabelAngleDeg >= 270) {\n                        // top right\n                        ctx.textAlign = \"left\"\n                        ctx.textBaseline = \"bottom\"\n                    } else {\n                        ctx.textAlign = \"left\"\n                        ctx.textBaseline = \"top\"\n                    }\n\n                    // draw angled line\n                    ctx.lineTo(outerLabelX, outerLabelY)\n                    ctx.stroke();\n                    // draw the outer label\n                    ctx.fillText(label, outerLabelX, outerLabelY);\n                } else {\n                    // draw the label picking area \n                    // manually offsetting x and y to take the canvas text align into account\n                    var fontW = ctx.measureText(label).width\n                    var fontH = parseInt(ctx.font.match(/\\d+/), 11)\n                    var rectHeight = 12\n\n                    if (outerLabelAngleDeg >= 90 && outerLabelAngleDeg < 180) {\n                        // bottom left\n                        ctx.rect(outerLabelX - fontW, outerLabelY, fontW, rectHeight)\n                    } else if (outerLabelAngleDeg >= 180 && outerLabelAngleDeg < 270) {\n                        // top left\n                        ctx.rect(outerLabelX - fontW, outerLabelY - fontH - 2, fontW, rectHeight)\n                    } else if (outerLabelAngleDeg >= 270) {\n                        // top right\n                        ctx.rect(outerLabelX, outerLabelY - fontH - 2, fontW, rectHeight)\n                    } else {\n                        // bottom right\n                        ctx.rect(outerLabelX, outerLabelY, fontW, rectHeight)\n                    }\n\n                    ctx.fillStyle = colors[i]\n                    ctx.fill();\n                }\n            }\n        }\n    }\n\n    roundRadUp = (rad) => {\n        if (rad < 0.1) {\n            return 0.1\n        } else if (rad >= 6.2) {\n            return 0\n        } else {\n            var newRad = rad += 0.1\n            return parseFloat(newRad.toFixed(1))\n        }\n    }\n\n    roundDegToMultiOfTen = (deg) => {\n        if (deg < 10) {\n            return 10\n        } else if (deg >= 350) {\n            return 360\n        } else {\n            return Number(String(deg).slice(0, -1) + 0)\n        }\n    }\n\n    toDegree = (angle) => {\n        return angle * (180 / Math.PI);\n    }\n\n    toRadians = (angle) => {\n        return angle * (Math.PI / 180);\n    }\n\n    findPos = (obj) => {\n        var curleft = 0,\n            curtop = 0;\n        if (obj.offsetParent) {\n            do {\n                curleft += obj.offsetLeft;\n                curtop += obj.offsetTop;\n            } while ((obj = obj.offsetParent));\n            return { x: curleft, y: curtop };\n        }\n        return undefined;\n    }\n\n    rgbToHex = (r, g, b) => {\n        if (r > 255 || g > 255 || b > 255) throw \"Invalid color component\";\n        return ((r << 16) | (g << 8) | b).toString(16).toUpperCase();\n    }\n\n    hexToRgb = (hex) => {\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        return result ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16)\n        } : null;\n    }\n\n    // takes in 0-255 and turn it into rgb\n    digToRgbStr = (num) => {\n        return \"rgb(0,0,\" + (num * this.pieChartPickingColorOffSet) + \")\"\n    }\n\n    randomRgba = () => {\n        var o = Math.round, r = Math.random, s = 255;\n        return 'rgba(' + o(r() * s) + ',' + o(r() * s) + ',' + o(r() * s) + ',' + r().toFixed(1) + ')';\n    }\n\n    drawBreakDownBars() {\n        let colors = {\n            peach: this.randomRgba(),\n            peach1: this.randomRgba(),\n            orange: this.randomRgba(),\n            cyan: this.randomRgba(),\n            red: this.randomRgba()\n        };\n        const rSet = new Set([0, 1]);\n        const oSet = new Set([2, 3, 4, 5, 6]);\n        let ub = 0;\n        let lb = 10;\n        const ctx = this.tooltipCanvas.getContext(\"2d\");\n\n        for (let i = 0; i < 10; i++) {\n            let fillStyle;\n            ctx.moveTo(0, ub);\n            ctx.moveTo(0, lb);\n            if (oSet.has(i)) {\n                fillStyle = colors.orange;\n            }\n            else if (rSet.has(i)) {\n                fillStyle = colors.red;\n            }\n            else {\n                fillStyle = colors.cyan;\n            }\n            ctx.fillStyle = fillStyle;\n            //x, y, w, h\n            ctx.fillRect(20, lb, 20, 10);\n            ctx.fillStyle = \"black\";\n            ctx.fillText(\"TEST\", 50, lb + 10);\n            // move the drawing pointer down\n            ub = lb;\n            lb += 10;\n        }\n    }\n\n    handleMouseMove = (e) => {\n        var pos = this.findPos(this.pieChartCanvas);\n        var x = e.pageX - pos.x;\n        var y = e.pageY - pos.y;\n        var p = this.pieChartPickingCtx.getImageData(x, y, 1, 1).data;\n        var currentColorIndex = p[2] / this.pieChartPickingColorOffSet - 1\n        var originalXOffset = 75\n        var originalYOffset = 15\n\n        // redraw the chart to \"offset\" the slice that is being hovered over\n        this.pieChartCtx.clearRect(0, 0, this.pieChartCanvas.width, this.pieChartCanvas.height);\n        this.drawPieChart(this.pieChartCtx, this.pieChartColors, this.pieChartColors[currentColorIndex]);\n\n        if (p[2] !== 0 && p[3] === 255) {\n            this.setState({\n                toolTipLeft: e.clientX - originalXOffset,\n                toolTipTop: e.clientY + originalYOffset,\n                canvasToolTipVisibility: \"visible\",\n                currentHovering: this.aggData[currentColorIndex]\n            });\n        } else {\n            this.setState({\n                ...this.state,\n                canvasToolTipVisibility: \"hidden\",\n            });\n        }\n\n        if (this.state.currentHovering != this.aggData[currentColorIndex]) {\n            // draw the bars\n            this.drawBreakDownBars();\n        }\n    }\n\n    handleMouseOut = () => {\n        this.setState({\n            ...this.state,\n            canvasToolTipVisibility: \"hidden\"\n        })\n    }\n\n    componentDidMount() {\n        this.pieChartCanvas = this.refs.canvas\n        this.pieChartPickingCanvas = this.refs.pieChartPickingCanvas\n        this.tooltipCanvas = this.refs.tooltipCanvas\n        this.pieChartCtx = this.pieChartCanvas.getContext(\"2d\")\n        this.pieChartPickingCtx = this.pieChartPickingCanvas.getContext(\"2d\")\n        this.drawPieChart(this.pieChartCtx, this.pieChartColors)\n        this.drawPieChart(this.pieChartPickingCtx, this.pieChartPickingColors, \" \", true)\n    }\n\n    render() {\n        const styles = {\n            pickingCanvas: {\n                display: \"none\"\n            },\n            tooltipContainer: {\n                width: this.pieChartToolTipW,\n                height: this.pieChartToolTipH,\n                left: this.state.toolTipLeft,\n                top: this.state.toolTipTop,\n                visibility: this.state.canvasToolTipVisibility,\n                zIndex: 9999\n            }\n        }\n        return (\n            <div className=\"pie-chart-container\">\n                <div className=\"pie-chart-title\">\n                    <span>{this.title + \" \" + this.dataSum} </span>\n                    <span className=\"pie-chart-title-measurements\">mL/kg/day</span>\n                </div>\n                <canvas\n                    style={styles.pickingCanvas}\n                    className=\"pie-chart-picking-canvas\"\n                    ref=\"pieChartPickingCanvas\"\n                    width={this.pieChartCanvasW}\n                    height={this.pieChartCanvasH}\n                />\n                <canvas\n                    className=\"pie-chart-canvas\"\n                    ref=\"canvas\"\n                    width={this.pieChartCanvasW}\n                    height={this.pieChartCanvasH}\n                    onMouseMove={this.handleMouseMove}\n                    onMouseOut={this.handleMouseOut}\n                />\n                <div\n                    className=\"pie-chart-tooltip-container\"\n                    style={styles.tooltipContainer}>\n                    <span className=\"pie-chart-tooltip-title\">\n                        {this.state.currentHovering ? this.state.currentHovering[\"type\"] : \"\"}\n                    </span>\n                    <br />\n                    <span className=\"pie-chart-tooltip-percent\">\n                        {this.state.currentHovering ? Math.round(this.state.currentHovering[\"percent\"].toFixed(2) * 100) + \"% \" : \"\"}\n                    </span>\n                    <span className=\"pie-chart-tooltip-details\">\n                        of total\n                    </span>\n                    <canvas\n                        className=\"pie-chart-tooltip-canvas\"\n                        ref=\"tooltipCanvas\"\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PieChart\n","import PieChartBundle from \"./PieChartBundle\";\nexport default PieChartBundle;","import React, { PureComponent } from \"react\";\nimport PieChart from \"./PieChart\"\n\nclass PieChartBundle extends PureComponent {\n    render() {\n        var data1 = [\n            { value: 1, type: \"MEDS\" },\n            { value: 1, type: \"FLUSHES\" },\n            { value: 20, type: \"FEEDS\" },\n            { value: 10, type: \"FEEDS\" },\n            { value: 1, type: \"TPN\" },\n            { value: 1, type: \"Tgdfs\" },\n            { value: 1, type: \"gfdsg\" },\n            { value: 1, type: \"ggfr\" },\n            { value: 1, type: \"4ggf\" },\n            { value: 1, type: \"oggm\" },\n            { value: 5, type: \"flac\" },\n            { value: 10, type: \"ps4\" },\n            { value: 10, type: \"ps5\" },\n            { value: 10, type: \"xbox\" },\n            { value: 10, type: \"lol\" },\n            { value: 1, type: \"fswwf\" },\n            { value: 10, type: \"lolra\" },\n            { value: 10, type: \"lolfde\" },\n            { value: 10, type: \"loefefl\" },\n            { value: 10, type: \"ps4324\" },\n            { value: 10, type: \"ps5433\" },\n            { value: 10, type: \"xbo4334x\" },\n            { value: 10, type: \"lo434l\" },\n            { value: 1, type: \"fsw433wf\" },\n            { value: 10, type: \"lol434ra\" },\n            { value: 10, type: \"loltgfde\" },\n            { value: 5, type: \"loefgrgrefl\" }]\n\n        var data2 = [\n            { value: 1, type: \"MEDS\" },\n            { value: 1, type: \"FLUSHES\" },\n            { value: 20, type: \"FEEDS\" },\n            { value: 10, type: \"FEEDS\" },\n            { value: 1, type: \"TPN\" }\n        ]\n\n        var data3 = [\n            { value: 10, type: \"MEDS\" },\n            { value: 1, type: \"FLUSHES\" },\n            { value: 7, type: \"FEEDS\" },\n            { value: 10, type: \"FEEDS\" },\n            { value: 10, type: \"TPN\" }\n        ]\n\n        var dataTypeToColorDict = {\n            MEDS: \"#C2EEF8\",\n            FLUSHES: \"#5DD2EF\",\n            TPN: \"#84A5D5\",\n            FEEDS: \"#A3DBDC\",\n            lol434ra: \"#C13BDA\",\n            xbo4334x: \"#613BFA\"\n        }\n\n        var title = \"Fluids\"\n\n        return (\n            <div className=\"pie-charts-wrap\">\n                <PieChart\n                    data={data2}\n                    dataTypeToColorDict={dataTypeToColorDict}\n                    title={\"Calories\"}\n                />\n                <PieChart\n                    data={data3}\n                    dataTypeToColorDict={dataTypeToColorDict}\n                    title={title}\n                />\n            </div>\n        )\n    }\n}\n\nexport default PieChartBundle","import React, { Component, Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport PieChartBundle from \"./lib\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {\n                data: [\n                    { time: 14324324, m1: 54, m2: 443 },\n                    { time: 14394324, m1: 45, m2: 403 },\n                    { time: 1439434324, m1: 45, m2: 403 },\n                    { time: 1432435424, m1: 54, m2: 443 },\n                    { time: 16394324, m1: 45, m2: 403 },\n                    { time: 15394344, m1: 45, m2: 403 },\n                    { time: 154355444, m1: 54, m2: 443 },\n                    { time: 1639555424, m1: 45, m2: 403 },\n                    { time: 153945454, m1: 45, m2: 403 }],\n                keys: [\"time\", \"m1\", \"m2\"]\n            },\n            selectedCol1: null,\n            selectedCol2: null\n        }\n\n        this.updateTableState = this.updateTableState.bind(this)\n    }\n\n    handleSubmit = (e) => {\n        if (e) e.preventDefault();\n        const data = this.data.value;\n        var jsonStr = data.replace(/(\\w+:)|(\\w+ :)/g, function (s) {\n            return '\"' + s.substring(0, s.length - 1) + '\":';\n        });\n\n        let json = JSON.parse(jsonStr)\n        this.setState({\n            ...this.state,\n            data: json\n        })\n    }\n\n    updateTableState(newState) {\n        this.setState({\n            ...this.state,\n            ...newState\n        })\n    }\n\n    selectedMeasurement() {\n\n    }\n\n    render() {\n        return (\n            <>\n                <div>Pass in data in the form: {'{data: [{time: 156565656, m1: 54, m2: 443}, {time: 1654654546, m1: 54, m2: 443 }, {time: 16546546546, m1: 54, m2: 443 },  {time: 1654663146, m1: 54, m2: 443 },  {time: 1656546546, m1: 54, m2: 443 }, {time: 16534546, m1: 54, m2: 443 }, {time: 1656346546, m1: 54, m2: 443 }], keys: [\"time\", \"m1\", \"m2\"]} '}</div>\n                <form onSubmit={this.handleSubmit}>\n                    <input style={{\n                        height: \"50px\",\n                        width: \"50%\",\n                        fontSize: \"14pt\"\n                    }} placeholder=\"data\" type=\"text\" ref={(element) => { this.data = element }} />\n                    <button>UPDATE TABLE</button>\n                </form>\n                <PieChartBundle\n                />\n            </>\n        )\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}