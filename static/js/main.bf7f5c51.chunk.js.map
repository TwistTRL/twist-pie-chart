{"version":3,"sources":["lib/index.js","lib/PieChart.js","index.js"],"names":["PieChart","props","handleMouseMove","e","pos","findPos","pieChartCanvas","x","pageX","y","pageY","p","pieChartPickingCtx","getImageData","data","currentColorIndex","pieChartPickingColorOffSet","pieChartColors","aggData","forEach","d","push","dataTypeToColorDict","drawPieChart","pieChartCtx","setState","state","toolTipLeft","clientX","toolTipTop","clientY","canvasToolTipVisibility","currentHovering","color","handleMouseOut","title","typeToColorDict","pieChartCanvasW","width","pieChartCanvasH","pieChartToolTipW","pieChartToolTipH","pieChartToolTipOffsetY","dataSum","colorToDataTypeDict","pieChartPickingColors","i","length","digToRgbStr","this","refs","canvas","pieChartPickingCanvas","tooltipCanvas","getContext","aggTheData","rawData","aggDataTypeTable","value","type","Object","keys","key","index","Math","PI","sort","a","b","rad","ctx","colors","r","offsetX","offsetY","medianAngleRad","cosMedianAngle","sinMedianAngle","outerLabelAngleDeg","selected","isPickingCanvas","offset","beginAngle","endAngle","cx","cy","label","fillColor","maxUsedOuterLabelAngleDeg","clearRect","cos","sin","roundDegToMultiOfTen","toDegree","beginPath","fillStyle","moveTo","arc","lineTo","strokeStyle","fill","textAlign","textBaseline","font","percent","fillText","outerLabelCosMedianAngle","toRadians","outerLabelSinMedianAngle","outerLabelR","outerLabelX","outerLabelY","fontW","measureText","fontH","parseInt","match","rectHeight","rect","lineWidth","stroke","deg","Number","String","slice","angle","obj","curleft","curtop","offsetParent","offsetLeft","offsetTop","num","o","round","random","toFixed","peach","randomRgba","peach1","orange","cyan","red","rSet","Set","oSet","ub","lb","has","fillRect","titleUnit","styles","chartContainer","pieChartTitle","fontSize","pickingCanvas","display","tooltipContainer","left","top","visibility","zIndex","className","style","ref","height","onMouseMove","onMouseOut","backgroundColor","PureComponent","App","handleSubmit","preventDefault","jsonStr","replace","s","substring","json","JSON","parse","newData","MEDS","FLUSHES","TPN","FEEDS","lol434ra","xbo4334x","meds","handleRemoveBtnCLick","bind","addOrRemove","floor","medIndex","onSubmit","placeholder","element","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf7f5c51.chunk.js","sourcesContent":["import PieChart from \"./PieChart\";\nexport default PieChart;","import React, { PureComponent } from \"react\";\nimport \"./PieChart.css\";\n\nclass PieChart extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.data = this.props.data;\n    this.title = this.props.title;\n    this.typeToColorDict = this.props.dataTypeToColorDict;\n    this.pieChartCtx = null;\n    this.pieChartPickingCtx = null;\n\n    this.pieChartCanvasW = this.props.width;\n    this.pieChartCanvasH = 400;\n    this.pieChartToolTipW = 120;\n    this.pieChartToolTipH = 190;\n    this.pieChartToolTipOffsetY = 60;\n\n    this.state = {\n      canvasToolTipVisibility: \"hidden\",\n      toolTipLeft: this.pieChartCanvasW - this.pieChartToolTipW,\n      toolTipTop:\n        this.pieChartCanvasH -\n        this.pieChartToolTipH +\n        this.pieChartToolTipOffsetY,\n      dataSum: 0\n    };\n\n    // pie chart data setup\n    this.colorToDataTypeDict = {};\n    this.pieChartColors = [];\n    this.pieChartPickingColors = [];\n    this.pieChartPickingColorOffSet = 7;\n\n    for (var i = 1; i <= this.data.length; i++) {\n      this.pieChartPickingColors.push(this.digToRgbStr(i));\n    }\n  }\n\n  componentDidMount() {\n    this.pieChartCanvas = this.refs.canvas;\n    this.pieChartPickingCanvas = this.refs.pieChartPickingCanvas;\n    this.tooltipCanvas = this.refs.tooltipCanvas;\n    this.pieChartCtx = this.pieChartCanvas.getContext(\"2d\");\n    this.pieChartPickingCtx = this.pieChartPickingCanvas.getContext(\"2d\");\n    this.aggData = this.aggTheData(this.data);\n    this.pieChartPickingColors = [];\n    for (var i = 1; i <= this.aggData.length; i++) {\n      this.pieChartPickingColors.push(this.digToRgbStr(i));\n    }\n    let pieChartColors = [];\n    this.aggData.forEach(d => {\n      pieChartColors.push(this.props.dataTypeToColorDict[d[\"type\"]]);\n    });\n    this.drawPieChart(this.pieChartCtx, pieChartColors);\n    this.drawPieChart(\n      this.pieChartPickingCtx,\n      this.pieChartPickingColors,\n      \" \",\n      true\n    );\n  }\n\n  componentDidUpdate() {\n    this.data = this.props.data;\n    this.title = this.props.title;\n    this.typeToColorDict = this.props.dataTypeToColorDict;\n    this.aggData = this.aggTheData(this.data);\n    this.pieChartPickingColors = [];\n    for (var i = 1; i <= this.aggData.length; i++) {\n      this.pieChartPickingColors.push(this.digToRgbStr(i));\n    }\n    let pieChartColors = [];\n    this.aggData.forEach(d => {\n      pieChartColors.push(this.props.dataTypeToColorDict[d[\"type\"]]);\n    });\n    if (this.state.canvasToolTipVisibility === \"hidden\") {\n      this.drawPieChart(this.pieChartCtx, pieChartColors);\n      this.drawPieChart(\n        this.pieChartPickingCtx,\n        this.pieChartPickingColors,\n        \" \",\n        true\n      );\n    }\n  }\n\n  aggTheData(rawData) {\n    let aggData = [];\n    let aggDataTypeTable = {};\n    this.dataSum = 0;\n    this.pieChartColors = [];\n\n    rawData.forEach(d => {\n      this.dataSum += d.value;\n      if (!aggDataTypeTable[d.type]) {\n        aggDataTypeTable[d.type] = { value: d.value };\n      } else {\n        aggDataTypeTable[d.type] = {\n          value: (aggDataTypeTable[d.type][\"value\"] += d.value)\n        };\n      }\n    });\n\n    Object.keys(aggDataTypeTable).forEach((key, index) => {\n      let type = aggDataTypeTable[key];\n      this.pieChartColors.push(this.typeToColorDict[key]);\n      type[\"percent\"] = type[\"value\"] / this.dataSum;\n      type[\"rad\"] = type[\"percent\"] * 2 * Math.PI;\n      type[\"type\"] = key;\n      this.colorToDataTypeDict[this.pieChartColors[index]] = type;\n      aggData[index] = type;\n    });\n\n    aggData.sort((a, b) => {\n      return a.rad - b.rad;\n    });\n\n    this.setState({\n      ...this.state,\n      dataSum: this.dataSum\n    });\n\n    return aggData;\n  }\n\n  // pass in data too\n  drawPieChart(ctx, colors, selected = \"\", isPickingCanvas = false) {\n    var offset = 10;\n    var beginAngle = 0;\n    var endAngle = 0;\n    var r,\n      x,\n      y,\n      offsetX,\n      offsetY,\n      medianAngleRad,\n      cosMedianAngle,\n      sinMedianAngle;\n    var cx = this.pieChartCanvasW / 2;\n    var cy = this.pieChartCanvasH / 2 + 30;\n    var label = \"ERROR\";\n    var fillColor = \"\";\n    var maxUsedOuterLabelAngleDeg = 0;\n    var outerLabelAngleDeg;\n\n    if (ctx) {\n      ctx.clearRect(0, 0, this.pieChartCanvasW, this.pieChartCanvasH);\n\n      for (var i = 0; i < this.aggData.length; i++) {\n        r = isPickingCanvas\n          ? this.pieChartCanvasW / 4 + 10\n          : this.pieChartCanvasW / 4;\n        label = this.aggData[i].type;\n        beginAngle = endAngle;\n        endAngle = endAngle + this.aggData[i].rad;\n        medianAngleRad = (endAngle + beginAngle) / 2;\n        cosMedianAngle = Math.cos(medianAngleRad);\n        sinMedianAngle = Math.sin(medianAngleRad);\n        x = cx + r * 0.6 * cosMedianAngle;\n        y = cy + r * 0.6 * sinMedianAngle;\n        fillColor = colors[i];\n\n        if (isPickingCanvas) {\n          // picking canvas\n          offsetX = 0;\n          offsetY = 0;\n        } else if (fillColor === selected) {\n          // for hovering effect\n          offsetX = cosMedianAngle * offset;\n          offsetY = sinMedianAngle * offset;\n        } else {\n          offsetX = cosMedianAngle * 2;\n          offsetY = sinMedianAngle * 2;\n        }\n\n        // for outer labeling\n        outerLabelAngleDeg = this.roundDegToMultiOfTen(\n          this.toDegree(medianAngleRad)\n        );\n        if (outerLabelAngleDeg <= maxUsedOuterLabelAngleDeg + 5) {\n          maxUsedOuterLabelAngleDeg += 6;\n          outerLabelAngleDeg = maxUsedOuterLabelAngleDeg;\n        } else {\n          maxUsedOuterLabelAngleDeg = outerLabelAngleDeg;\n        }\n\n        // draw the slice\n        ctx.beginPath();\n        ctx.fillStyle = fillColor;\n        ctx.moveTo(cx + offsetX, cy + offsetY);\n        ctx.arc(cx + offsetX, cy + offsetY, r, beginAngle, endAngle);\n        ctx.lineTo(cx + offsetX, cy + offsetY);\n        ctx.strokeStyle = fillColor; //'rgba(0, 0, 0, 0.4)'\n        ctx.fill();\n\n        //label styling\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"top\";\n        // hovering effect\n        ctx.font =\n          selected !== fillColor\n            ? \"500 10pt MuseoSans Arial\"\n            : \"900 10pt MuseoSans Arial\";\n        ctx.fillStyle = isPickingCanvas ? fillColor : \"#1f589d\";\n\n        if (this.aggData[i].percent > 0.15) {\n          if (!isPickingCanvas) {\n            // draw the inner label\n            ctx.fillText(label, x, y);\n          }\n        } else {\n          var outerLabelCosMedianAngle = Math.cos(\n            this.toRadians(outerLabelAngleDeg)\n          );\n          var outerLabelSinMedianAngle = Math.sin(\n            this.toRadians(outerLabelAngleDeg)\n          );\n          // modify the radius for the picking canvas so that label rect is drawn at the same position\n          // as the visible canvas\n          var outerLabelR = isPickingCanvas ? (r -= 10) : r;\n          var outerLabelX =\n            cx +\n            outerLabelR * 0.8 * outerLabelCosMedianAngle +\n            (outerLabelR / 2) * outerLabelCosMedianAngle;\n          var outerLabelY =\n            cy +\n            outerLabelR * 0.9 * outerLabelSinMedianAngle +\n            (outerLabelR / 2) * outerLabelSinMedianAngle;\n\n          if (!isPickingCanvas) {\n            if (this.aggData[i].percent > 0.15) {\n              // draw the inner label\n              ctx.fillText(label, x, y);\n            }\n\n            // draw the label line\n            x = cx + r * 0.9 * cosMedianAngle;\n            y = cy + r * 0.9 * sinMedianAngle;\n            ctx.lineWidth = selected === fillColor[i] ? 2 : 1.3;\n            ctx.beginPath();\n            ctx.moveTo(x, y);\n            ctx.lineTo(\n              x + (r / 5) * cosMedianAngle,\n              y + (r / 5) * sinMedianAngle\n            );\n\n            // position label differently depending on the angle\n            if (outerLabelAngleDeg >= 90 && outerLabelAngleDeg < 180) {\n              // bottom left\n              ctx.textAlign = \"right\";\n              ctx.textBaseline = \"top\";\n            } else if (outerLabelAngleDeg >= 180 && outerLabelAngleDeg < 270) {\n              // top left\n              ctx.textAlign = \"right\";\n              ctx.textBaseline = \"bottom\";\n            } else if (outerLabelAngleDeg >= 270) {\n              // top right\n              ctx.textAlign = \"left\";\n              ctx.textBaseline = \"bottom\";\n            } else {\n              ctx.textAlign = \"left\";\n              ctx.textBaseline = \"top\";\n            }\n\n            // draw angled line\n            ctx.lineTo(outerLabelX, outerLabelY);\n            ctx.stroke();\n            // draw the outer label\n            ctx.fillText(label, outerLabelX, outerLabelY);\n          } else {\n            // draw the label picking area\n            // manually offsetting x and y to take the canvas text align into account\n            var fontW = ctx.measureText(label).width;\n            var fontH = parseInt(ctx.font.match(/\\d+/), 11);\n            var rectHeight = 12;\n\n            if (outerLabelAngleDeg >= 90 && outerLabelAngleDeg < 180) {\n              // bottom left\n              ctx.rect(outerLabelX - fontW, outerLabelY, fontW, rectHeight);\n            } else if (outerLabelAngleDeg >= 180 && outerLabelAngleDeg < 270) {\n              // top left\n              ctx.rect(\n                outerLabelX - fontW,\n                outerLabelY - fontH - 2,\n                fontW,\n                rectHeight\n              );\n            } else if (outerLabelAngleDeg >= 270) {\n              // top right\n              ctx.rect(outerLabelX, outerLabelY - fontH - 2, fontW, rectHeight);\n            } else {\n              // bottom right\n              ctx.rect(outerLabelX, outerLabelY, fontW, rectHeight);\n            }\n\n            ctx.fillStyle = fillColor[i];\n            ctx.fill();\n          }\n        }\n      }\n    }\n  }\n\n  roundDegToMultiOfTen(deg) {\n    if (deg < 10) {\n      return 10;\n    } else if (deg >= 350) {\n      return 360;\n    } else {\n      return Number(String(deg).slice(0, -1) + 0);\n    }\n  }\n\n  toDegree(angle) {\n    return angle * (180 / Math.PI);\n  }\n\n  toRadians(angle) {\n    return angle * (Math.PI / 180);\n  }\n\n  findPos(obj) {\n    var curleft = 0,\n      curtop = 0;\n    if (obj.offsetParent) {\n      do {\n        curleft += obj.offsetLeft;\n        curtop += obj.offsetTop;\n      } while ((obj = obj.offsetParent));\n      return { x: curleft, y: curtop };\n    }\n    return undefined;\n  }\n\n  // takes in 0-255 and turn it into rgb\n  digToRgbStr(num) {\n    return \"rgb(0,0,\" + num * this.pieChartPickingColorOffSet + \")\";\n  }\n\n  randomRgba() {\n    var o = Math.round,\n      r = Math.random,\n      s = 255;\n    return (\n      \"rgba(\" +\n      o(r() * s) +\n      \",\" +\n      o(r() * s) +\n      \",\" +\n      o(r() * s) +\n      \",\" +\n      r().toFixed(1) +\n      \")\"\n    );\n  }\n\n  drawBreakDownBars() {\n    let colors = {\n      peach: this.randomRgba(),\n      peach1: this.randomRgba(),\n      orange: this.randomRgba(),\n      cyan: this.randomRgba(),\n      red: this.randomRgba()\n    };\n    const rSet = new Set([0, 1]);\n    const oSet = new Set([2, 3, 4, 5, 6]);\n    let ub = 0;\n    let lb = 10;\n    const ctx = this.tooltipCanvas.getContext(\"2d\");\n\n    for (let i = 0; i < 10; i++) {\n      let fillStyle;\n      ctx.moveTo(0, ub);\n      ctx.moveTo(0, lb);\n      if (oSet.has(i)) {\n        fillStyle = colors.orange;\n      } else if (rSet.has(i)) {\n        fillStyle = colors.red;\n      } else {\n        fillStyle = colors.cyan;\n      }\n      ctx.fillStyle = fillStyle;\n      //x, y, w, h\n      ctx.fillRect(20, lb, 20, 10);\n      ctx.fillStyle = \"black\";\n      ctx.fillText(\"TEST\", 50, lb + 10);\n      // move the drawing pointer down\n      ub = lb;\n      lb += 10;\n    }\n  }\n\n  drawTooltip() {\n    let colors = {\n      peach: this.randomRgba(),\n      peach1: this.randomRgba(),\n      orange: this.randomRgba(),\n      cyan: this.randomRgba(),\n      red: this.randomRgba()\n    };\n    const rSet = new Set([0, 1]);\n    const oSet = new Set([2, 3, 4, 5, 6]);\n    let ub = 0;\n    let lb = 10;\n    const ctx = this.tooltipCanvas.getContext(\"2d\");\n\n    for (let i = 0; i < 10; i++) {\n      let fillStyle;\n      ctx.moveTo(0, ub);\n      ctx.moveTo(0, lb);\n      if (oSet.has(i)) {\n        fillStyle = colors.orange;\n      } else if (rSet.has(i)) {\n        fillStyle = colors.red;\n      } else {\n        fillStyle = colors.cyan;\n      }\n      ctx.fillStyle = fillStyle;\n      //x, y, w, h\n      ctx.fillRect(20, lb, 20, 10);\n      ctx.fillStyle = \"black\";\n      ctx.fillText(\"TEST\", 50, lb + 10);\n      // move the drawing pointer down\n      ub = lb;\n      lb += 10;\n    }\n  }\n\n  handleMouseMove = e => {\n    var pos = this.findPos(this.pieChartCanvas);\n    var x = e.pageX - pos.x;\n    var y = e.pageY - pos.y;\n    var p = this.pieChartPickingCtx.getImageData(x, y, 1, 1).data;\n    var currentColorIndex = p[2] / this.pieChartPickingColorOffSet - 1;\n    var originalXOffset = 75;\n    var originalYOffset = 15;\n\n    // redraw the chart to \"offset\" the slice that is being hovered over\n    // this.pieChartCtx.clearRect(0, 0, this.pieChartCanvasW, this.pieChartCanvasH);\n    let pieChartColors = [];\n    this.aggData.forEach(d => {\n      pieChartColors.push(this.props.dataTypeToColorDict[d[\"type\"]]);\n    });\n    this.drawPieChart(\n      this.pieChartCtx,\n      pieChartColors,\n      pieChartColors[currentColorIndex]\n    );\n\n    if (p[2] !== 0 && p[3] === 255) {\n      this.setState({\n        ...this.state,\n        toolTipLeft: e.clientX - originalXOffset,\n        toolTipTop: e.clientY + originalYOffset,\n        canvasToolTipVisibility: \"visible\",\n        currentHovering: {\n          ...this.aggData[currentColorIndex],\n          color: pieChartColors[currentColorIndex]\n        }\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        canvasToolTipVisibility: \"hidden\"\n      });\n    }\n\n    if (this.state.currentHovering !== this.aggData[currentColorIndex]) {\n      // draw the bars\n      // this.drawBreakDownBars();\n    }\n  };\n\n  handleMouseOut = () => {\n    this.setState({\n      ...this.state,\n      canvasToolTipVisibility: \"hidden\"\n    });\n  };\n\n  render() {\n    const { titleUnit } = this.props;\n    const { currentHovering, dataSum } = this.state;\n    const styles = {\n      chartContainer: {\n        width: this.props.width\n      },\n      pieChartTitle: {\n        fontSize: \"25pt\"\n      },\n      pickingCanvas: {\n        display: \"none\"\n      },\n      tooltipContainer: {\n        width: this.pieChartToolTipW,\n        left: this.state.toolTipLeft,\n        top: this.state.toolTipTop,\n        visibility: this.state.canvasToolTipVisibility,\n        zIndex: 9999\n      }\n    };\n\n    return (\n      <div\n        className=\"pie-chart-container\"\n        style={{ width: styles.chartContainer.width }}\n      >\n        <div\n          className=\"pie-chart-title\"\n          style={{ fontSize: styles.pieChartTitle.fontSize }}\n        >\n          <span>{this.title + \" \" + dataSum} </span>\n          <span className=\"pie-chart-title-measurements\">{titleUnit}</span>\n        </div>\n        <canvas\n          style={styles.pickingCanvas}\n          className=\"pie-chart-picking-canvas\"\n          ref=\"pieChartPickingCanvas\"\n          width={this.pieChartCanvasW}\n          height={this.pieChartCanvasH}\n        />\n        <canvas\n          className=\"pie-chart-canvas\"\n          ref=\"canvas\"\n          width={this.pieChartCanvasW}\n          height={this.pieChartCanvasH}\n          onMouseMove={this.handleMouseMove}\n          onMouseOut={this.handleMouseOut}\n        />\n        {currentHovering ? (\n          <div\n            className=\"pie-chart-tooltip-container\"\n            style={styles.tooltipContainer}\n          >\n            <div\n              className=\"pie-chart-tooltip-title-container\"\n              style={{\n                backgroundColor: currentHovering[\"color\"]\n                  ? currentHovering[\"color\"]\n                  : \"white\"\n              }}\n            >\n              <span className=\"pie-chart-tooltip-title\">\n                {currentHovering[\"type\"] ? currentHovering[\"type\"] : \"\"}\n              </span>\n            </div>\n            <span className=\"pie-chart-tooltip-percent\">\n              {currentHovering[\"value\"] ? currentHovering[\"value\"] : \"\"}\n            </span>\n            <span className=\"pie-chart-tooltip-details\">{titleUnit}</span>\n            <br />\n            <span className=\"pie-chart-tooltip-percent\">\n              {currentHovering[\"percent\"]\n                ? Math.round(currentHovering[\"percent\"].toFixed(2) * 100) + \"%\"\n                : \"\"}\n            </span>\n            <span className=\"pie-chart-tooltip-details\">of total</span>\n            {/* <canvas className=\"pie-chart-tooltip-canvas\" ref=\"tooltipCanvas\" /> */}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default PieChart;\n","import React, { Component, Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PieChart from \"./lib\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.dataTypeToColorDict = {\n      MEDS: \"#C2EEF8\",\n      FLUSHES: \"#5DD2EF\",\n      TPN: \"#84A5D5\",\n      FEEDS: \"#A3DBDC\",\n      lol434ra: \"#C13BDA\",\n      xbo4334x: \"#613BFA\"\n    };\n\n    this.state = {\n      data: [\n        { value: 1, type: \"MEDS\" },\n        { value: 1, type: \"FLUSHES\" },\n        { value: 20, type: \"FEEDS\" },\n        { value: 10, type: \"FEEDS\" },\n        { value: 1, type: \"TPN\" }\n      ]\n    };\n\n    this.meds = [\"MEDS\", \"FLUSHES\", \"FEEDS\", \"TPN\"];\n\n    this.handleRemoveBtnCLick = this.handleRemoveBtnCLick.bind(this);\n  }\n\n  componentDidMount() {\n    // let self = this;\n    // setInterval(function() {\n    //   self.simulateDataChange();\n    // }, 1000);\n  }\n\n  handleRemoveBtnCLick() {\n    let data = this.state.data;\n    data = data.slice(0, -1);\n    this.setState({\n      data: data\n    });\n  }\n\n  handleSubmit = e => {\n    if (e) e.preventDefault();\n    const data = this.data.value;\n    var jsonStr = data.replace(/(\\w+:)|(\\w+ :)/g, function(s) {\n      return '\"' + s.substring(0, s.length - 1) + '\":';\n    });\n\n    let json = JSON.parse(jsonStr);\n    let newData = [...this.state.data];\n    newData.push(json);\n\n    this.setState({\n      data: newData\n    });\n  };\n\n  simulateDataChange() {\n    let addOrRemove = Math.floor(Math.random() * 100) + 0;\n    let medIndex = Math.floor(Math.random() * 4) + 0;\n\n    if (addOrRemove % 11 === 0) {\n      let data = this.state.data;\n      data = data.slice(0, -1);\n      this.setState({\n        data: data\n      });\n    } else {\n      let json = {\n        value: Math.floor(Math.random() * 100) + 1,\n        type: this.meds[medIndex]\n      };\n      let newData = this.state.data;\n      newData.push(json);\n      this.setState({\n        data: [...this.state.data, json]\n      });\n    }\n  }\n\n  render() {\n    let { data, width } = this.state;\n    return (\n      <>\n        <div>Pass in data in the form: {' { value: 1, type: \"MEDS\" } '}</div>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            style={{\n              height: \"50px\",\n              width: \"50%\",\n              fontSize: \"14pt\"\n            }}\n            placeholder=\"data\"\n            type=\"text\"\n            ref={element => {\n              this.data = element;\n            }}\n          />\n          <button>ADD DATA</button>\n        </form>\n        <button onClick={this.handleRemoveBtnCLick}>REMOVE DATA</button>\n        <PieChart\n          data={data}\n          width={500}\n          dataTypeToColorDict={this.dataTypeToColorDict}\n          title=\"Calories\"\n          titleUnit=\"kCal/kg/day\"\n        />\n      </>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}